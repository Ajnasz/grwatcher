!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
Auth	chrome/content/accountmanager.new.js	/^    var Auth = response.replace(rex.auth, '$1');$/;"	v
Cookie.get	chrome/content/cookie.js	/^    get: function(name, domain) {$/;"	m
Cookie.set	chrome/content/cookie.js	/^    set: function(domain, name, value, date, path) {$/;"	m
GRW.AccountManager.CookieManager	chrome/content/accountmanager.new.js	/^  CookieManager: Components.classes["@mozilla.org\/cookiemanager;1"].getService(Components.interfaces.nsICookieManager),$/;"	p
GRW.Prefs.get	chrome/content/preferences.js	/^    get: {$/;"	p
GRW.Prefs.getBool	chrome/content/preferences.js	/^    getBool: function(pref) {$/;"	m
GRW.Prefs.getChar	chrome/content/preferences.js	/^    getChar: function(pref) {$/;"	m
GRW.Prefs.getInt	chrome/content/preferences.js	/^    getInt: function(pref) {$/;"	m
GRW.States.conntype	chrome/content/preferences.js	/^    conntype: GRW.Prefs.get.useSecureConnection() ? 'https' : 'http',$/;"	p
GRW.States.currentNum	chrome/content/preferences.js	/^    currentNum: null,$/;"	p
GRW.States.feeds	chrome/content/preferences.js	/^    feeds: null,$/;"	p
GRW.States.showNotification	chrome/content/preferences.js	/^    showNotification: true,$/;"	p
GRW.States.timeoutid	chrome/content/preferences.js	/^    timeoutid: null,$/;"	p
GRW.escapeForRegExp	chrome/content/general.js	/^GRW.escapeForRegExp = function(str) {$/;"	f
GRW.init	chrome/content/grwatcher.js	/^GRW.init = function() {$/;"	f
GRW.module	chrome/content/core.js	/^GRW.module = function(moduleName, module) {$/;"	f
GRW.openNewTabCheckToogle	chrome/content/grprefs.js	/^GRW.openNewTabCheckToogle = function() {$/;"	f
GRW.savePreferences	chrome/content/grprefs.js	/^GRW.savePreferences = function() {$/;"	f
GRW.setPrefPaneVals	chrome/content/grprefs.js	/^GRW.setPrefPaneVals = function() {$/;"	f
LSID	chrome/content/accountmanager.new.js	/^    var LSID = response.replace(rex.lsid, '$1');$/;"	v
SID	chrome/content/accountmanager.new.js	/^    var SID = response.replace(rex.sid, '$1');$/;"	v
_PasswordManager	chrome/content/passmanager.js	/^  var _PasswordManager = function() {$/;"	c
_PasswordManager.addPassword	chrome/content/passmanager.js	/^    this.addPassword = function(password) {$/;"	m
_PasswordManager.getPassword	chrome/content/passmanager.js	/^    this.getPassword = function() {$/;"	m
a	testfiles/showgrwmessages.js	/^var a = Components.classes["@mozilla.org\/consoleservice;1"].getService(Components.interfaces.nsIConsoleService);var b = {};a.getMessageArray(b,{});var c = [];for(var i in b){for(var j in b[i]){if(\/GRW\/.test(b[i][j].message)){c.push(b[i][j].message);}}};a.logStringMessage('GRW messages: ' + c.join(" ====new message ==== "));$/;"	v
accountExists	chrome/content/accountmanager.js	/^        accountExists: function() {$/;"	m
accountExists	chrome/content/loginmanager.js	/^        accountExists: function() {$/;"	m
ajaxSuccess	chrome/content/accountmanager.js	/^        ajaxSuccess: function(e) {$/;"	m
ajaxSuccess	chrome/content/loginmanager.js	/^        ajaxSuccess: function(e) {$/;"	m
augmentObject	chrome/content/core.js	/^  augmentObject = function(r, s) {$/;"	f
augmentProto	chrome/content/core.js	/^  augmentProto = function(r, s) {$/;"	f
buildXPI	makexpi.sh	/^function buildXPI {$/;"	f
c	testfiles/showgrwmessages.js	/^var a = Components.classes["@mozilla.org\/consoleservice;1"].getService(Components.interfaces.nsIConsoleService);var b = {};a.getMessageArray(b,{});var c = [];for(var i in b){for(var j in b[i]){if(\/GRW\/.test(b[i][j].message)){c.push(b[i][j].message);}}};a.logStringMessage('GRW messages: ' + c.join(" ====new message ==== "));$/;"	v
cleanBuild	makexpi.sh	/^function cleanBuild {$/;"	f
cleartimeout	chrome/content/core.js	/^      cleartimeout = function(timer) {$/;"	f
clickCallback.observe	chrome/content/notifier.js	/^    observe: function(subject, topic, data) {$/;"	m
consoleService	chrome/content/core.js	/^  var consoleService = Components.classes["@mozilla.org\/consoleservice;1"].getService(Components.interfaces.nsIConsoleService);$/;"	v
curSid	chrome/content/accountmanager.new.js	/^    var curSid = GRW.AccountManager.getCurrentSID();$/;"	v
eventProvider	chrome/content/core.js	/^  eventProvider.prototype = {$/;"	c
eventProvider	chrome/content/core.js	/^  var eventProvider = function() {$/;"	f
eventProvider.fireEvent	chrome/content/core.js	/^    fireEvent: function(eventName, args) {$/;"	m
eventProvider.on	chrome/content/core.js	/^    on: function() {$/;"	m
eventProvider.subscribe	chrome/content/core.js	/^    subscribe: function(eventName, fn, obj, overrideContext) {$/;"	m
getCurrentSID	chrome/content/accountmanager.js	/^        getCurrentSID: function() {$/;"	m
getCurrentSID	chrome/content/loginmanager.js	/^        getCurrentSID: function() {$/;"	m
getList	chrome/content/getlist.js	/^      getList.prototype = {$/;"	c
getList._fireUnreadAndSubscription	chrome/content/getlist.js	/^        _fireUnreadAndSubscription: function() {$/;"	m
getList._initRequests	chrome/content/getlist.js	/^        _initRequests: function() {$/;"	m
getList._processSubscriptionList	chrome/content/getlist.js	/^        _processSubscriptionList: function(response) {$/;"	m
getList._processUnreadCount	chrome/content/getlist.js	/^        _processUnreadCount: function(response) {$/;"	m
getList.getSubscriptionList	chrome/content/getlist.js	/^        getSubscriptionList: function() {$/;"	m
getList.getUnreadCount	chrome/content/getlist.js	/^        getUnreadCount: function() {$/;"	m
getList.init	chrome/content/getlist.js	/^        init: function() {$/;"	m
getList.matchUnreadItems	chrome/content/getlist.js	/^        matchUnreadItems: function() {$/;"	m
getList.start	chrome/content/getlist.js	/^        start: function() {$/;"	m
getList.start.firstRequest	chrome/content/getlist.js	/^          var firstRequest = function() {$/;"	f
getOpenedGR	chrome/content/gropen.js	/^  var getOpenedGR = function() {$/;"	f
getOpenedGR.outObj.blankPage	chrome/content/gropen.js	/^    var outObj = {grTab: false, blankPage: false},$/;"	p
getOpenedGR.outObj.grTab	chrome/content/gropen.js	/^    var outObj = {grTab: false, blankPage: false},$/;"	p
grwajax	chrome/content/ajax.js	/^  grwajax.prototype = {$/;"	c
grwajax._init	chrome/content/ajax.js	/^    _init: function(pars, parameters) {$/;"	m
grwajax._initRequest	chrome/content/ajax.js	/^    _initRequest: function() {$/;"	m
grwajax._initRequest.req	chrome/content/ajax.js	/^      this.req.onreadystatechange = function() {_this.handler.call(_this);};$/;"	m
grwajax.createParameters	chrome/content/ajax.js	/^    createParameters: function() {$/;"	m
grwajax.errorHandler	chrome/content/ajax.js	/^    errorHandler: function(msg, Exception) {$/;"	m
grwajax.handler	chrome/content/ajax.js	/^    handler: function() {$/;"	m
grwajax.send	chrome/content/ajax.js	/^    send: function() {$/;"	m
grwajax.successHandler	chrome/content/ajax.js	/^    successHandler: function() {$/;"	m
hide	chrome/content/ui/statusbar-counter.js	/^    hide: function(label) {$/;"	m
isBoolean	chrome/content/core.js	/^    isBoolean: function(arg) {$/;"	m
isEmail	chrome/content/core.js	/^    isEmail: function(arg) {$/;"	m
isFunction	chrome/content/core.js	/^    isFunction: function(arg) {$/;"	m
isLoggedIn	chrome/content/accountmanager.js	/^        isLoggedIn: function() {$/;"	m
isLoggedIn	chrome/content/loginmanager.js	/^        isLoggedIn: function() {$/;"	m
isNull	chrome/content/core.js	/^    isNull: function(arg) {$/;"	m
isNumber	chrome/content/core.js	/^    isNumber: function(arg) {$/;"	m
isObject	chrome/content/core.js	/^    isObject: function(arg) {$/;"	m
isString	chrome/content/core.js	/^    isString: function(arg) {$/;"	m
isUndef	chrome/content/core.js	/^    isUndef: function(arg) {$/;"	m
isUrl	chrome/content/core.js	/^    isUrl: function(arg) {$/;"	m
let.JSON	chrome/content/core.js	/^  JSON: null$/;"	p
log	chrome/content/core.js	/^  var log = function() {$/;"	f
logIn	chrome/content/accountmanager.js	/^        logIn: function(onLogin) {$/;"	m
logIn	chrome/content/loginmanager.js	/^        logIn: function(onLogin) {$/;"	m
loginFailed	chrome/content/accountmanager.js	/^        loginFailed: function(msg) {$/;"	m
loginFailed	chrome/content/loginmanager.js	/^        loginFailed: function(msg) {$/;"	m
mapwindows	chrome/content/ui/mapwindows.js	/^  var mapwindows = function(fn, scope) {$/;"	f
notificationWin	chrome/content/notifier.js	/^  var notificationWin = function(value) {$/;"	f
notifier	chrome/content/notifier.js	/^  var notifier = function(unreadCount) {$/;"	f
openReader	chrome/content/gropen.js	/^  var openReader = function(subUrl) {$/;"	c
param	chrome/content/accountmanager.new.js	/^      var param = 'source=' + encodeURIComponent('Google Reader Watcher') + '&Email='+encodeURIComponent(GRW.Prefs.getPref.userName())+'&Passwd='+encodeURIComponent(GRW.PasswordManager.getPassword())+'&service=reader&continue=' + encodeURIComponent('http:\/\/www.google.com\/');$/;"	v
requester	chrome/content/requester.js	/^  var requester = function() {$/;"	c
requester.setNext	chrome/content/requester.js	/^    setNext: function() {$/;"	m
requester.updater	chrome/content/requester.js	/^    updater: function() {$/;"	m
rex.sid	chrome/content/accountmanager.new.js	/^      sid: new RegExp('^SID=([-_a-zA-Z0-9]+)', 'm'),$/;"	p
runFn	chrome/content/ajax.js	/^    var runFn = function() {$/;"	f
setCurrentSID	chrome/content/accountmanager.js	/^        setCurrentSID: function(response) {$/;"	m
setCurrentSID	chrome/content/loginmanager.js	/^        setCurrentSID: function(response) {$/;"	m
setReaderStatus	chrome/content/ui/statusbar-icon-states.js	/^    setReaderStatus: function(status) {$/;"	m
setVersion	makexpi.sh	/^function setVersion {$/;"	f
show	chrome/content/ui/statusbar-counter.js	/^    show: function(label, value) {$/;"	m
unread.max	chrome/content/getlist.js	/^            max: obj.max,$/;"	p
unread.rJSON	chrome/content/getlist.js	/^            rJSON: obj,$/;"	p
unread.rText	chrome/content/getlist.js	/^            rText: text,$/;"	p
update	chrome/content/ui/statusbar-counter.js	/^    update: function(val, maxcount) {$/;"	m
var.callback.notify	chrome/content/core.js	/^        var callback = {notify: fn};$/;"	p
